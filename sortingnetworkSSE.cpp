#include "sortingnetworkSSE.h"
#include <xmmintrin.h>
#include <cstdlib>
#include <iostream>

#define SWAPSSE1(x, y) {a = _mm_load_ss(first + (x)); b = _mm_load_ss(first + (y)); max1 = _mm_max_ss(a,b); min1 = _mm_min_ss(a,b); _mm_store_ss(first + (x), min1); _mm_store_ss(first + (y), max1);}

#define SWAPSSE2(x, y) {c = _mm_load_ss(first + (x)); d = _mm_load_ss(first + (y)); max2 = _mm_max_ss(c,d); min2 = _mm_min_ss(c,d); _mm_store_ss(first + (x), min2); _mm_store_ss(first + (y), max2);}

void fastestnetworkSSE(float* first, float* last)
{
	int length = last - first;
    __m128 a, b, min1, max1;

	switch(length)
	{
        case 0:
        {
            break;
        }
		case 1:
		{
			break;
		}

		case 2: // Bose-Nelson -
		{
			SWAPSSE1(0, 1);
			break;
		}

		case 3: // Bose-Nelson
		{
			SWAPSSE1(1, 2);
			SWAPSSE1(0, 2);
			SWAPSSE1(0, 1);
			break;
		}

		case 4: // Bose-Nelson
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(1, 2);
			break;
		}

		case 5: // Bose-Nelson
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(3, 4);
			SWAPSSE1(2, 4);
			SWAPSSE1(2, 3);
			SWAPSSE1(0, 3);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 4);
			SWAPSSE1(1, 3);
			SWAPSSE1(1, 2);
			break;
		}

		case 6: // Bose-Nelson
		{
			SWAPSSE1(1, 2);
			SWAPSSE1(0, 2);
			SWAPSSE1(0, 1);
			SWAPSSE1(4, 5);
			SWAPSSE1(3, 5);
			SWAPSSE1(3, 4);
			SWAPSSE1(0, 3);
			SWAPSSE1(1, 4);
			SWAPSSE1(2, 5);
			SWAPSSE1(2, 4);
			SWAPSSE1(1, 3);
			SWAPSSE1(2, 3);
			break;
		}

		case 7: // Bose-Nelson
		{
			SWAPSSE1(1, 2);
			SWAPSSE1(0, 2);
			SWAPSSE1(0, 1);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(3, 5);
			SWAPSSE1(4, 6);
			SWAPSSE1(4, 5);
			SWAPSSE1(0, 4);
			SWAPSSE1(0, 3);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(2, 5);
			SWAPSSE1(1, 3);
			SWAPSSE1(2, 4);
			SWAPSSE1(2, 3);
			break;
		}

		case 8: // Bose-Nelson
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(1, 2);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(5, 6);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(1, 4);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(3, 6);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(3, 4);
			break;
		}

		case 9: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(3, 4);
			SWAPSSE1(6, 7);
			SWAPSSE1(1, 2);
			SWAPSSE1(4, 5);
			SWAPSSE1(7, 8);
			SWAPSSE1(0, 1);
			SWAPSSE1(3, 4);
			SWAPSSE1(6, 7);
			SWAPSSE1(0, 3);
			SWAPSSE1(3, 6);
			SWAPSSE1(0, 3);
			SWAPSSE1(1, 4);
			SWAPSSE1(4, 7);
			SWAPSSE1(1, 4);
			SWAPSSE1(2, 5);
			SWAPSSE1(5, 8);
			SWAPSSE1(2, 5);
			SWAPSSE1(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE1(2, 6);
			SWAPSSE1(4, 6);
			SWAPSSE1(2, 4);
			SWAPSSE1(2, 3);
			SWAPSSE1(5, 6);
			break;
		}

		case 10: // Best known
		{
			SWAPSSE1(4, 9);
			SWAPSSE1(3, 8);
			SWAPSSE1(2, 7);
			SWAPSSE1(1, 6);
			SWAPSSE1(0, 5);
			SWAPSSE1(1, 4);
			SWAPSSE1(6, 9);
			SWAPSSE1(0, 3);
			SWAPSSE1(5, 8);
			SWAPSSE1(0, 2);
			SWAPSSE1(3, 6);
			SWAPSSE1(7, 9);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 4);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(1, 2);
			SWAPSSE1(4, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(3, 5);
			SWAPSSE1(2, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 7);
			SWAPSSE1(2, 3);
			SWAPSSE1(6, 7);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(4, 5);
			break;
		}

		case 11: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE1(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE1(8, 10);
			SWAPSSE1(1, 2);
			SWAPSSE1(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE1(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE1(5, 9);
			SWAPSSE1(2, 6);
			SWAPSSE1(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE1(0, 4);
			SWAPSSE1(3, 7);
			SWAPSSE1(4, 8);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 4);
			SWAPSSE1(7, 10);
			SWAPSSE1(3, 8);
			SWAPSSE1(2, 3);
			SWAPSSE1(8, 9);
			SWAPSSE1(2, 4);
			SWAPSSE1(7, 9);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			break;
		}

		case 12: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE1(9, 11);
			SWAPSSE1(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE1(8, 10);
			SWAPSSE1(1, 2);
			SWAPSSE1(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE1(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE1(5, 9);
			SWAPSSE1(2, 6);
			SWAPSSE1(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE1(0, 4);
			SWAPSSE1(7, 11);
			SWAPSSE1(3, 7);
			SWAPSSE1(4, 8);
			SWAPSSE1(0, 4);
			SWAPSSE1(7, 11);
			SWAPSSE1(1, 4);
			SWAPSSE1(7, 10);
			SWAPSSE1(3, 8);
			SWAPSSE1(2, 3);
			SWAPSSE1(8, 9);
			SWAPSSE1(2, 4);
			SWAPSSE1(7, 9);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			break;
		}

		case 13: // Best known
		{
			SWAPSSE1(1, 7);
			SWAPSSE1(9, 11);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 8);
			SWAPSSE1(0, 12);
			SWAPSSE1(2, 6);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(8, 11);
			SWAPSSE1(7, 12);
			SWAPSSE1(5, 9);
			SWAPSSE1(0, 2);
			SWAPSSE1(3, 7);
			SWAPSSE1(10, 11);
			SWAPSSE1(1, 4);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 8);
			SWAPSSE1(11, 12);
			SWAPSSE1(4, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(1, 7);
			SWAPSSE1(2, 6);
			SWAPSSE1(9, 11);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(0, 5);
			SWAPSSE1(2, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 5);
			SWAPSSE1(7, 8);
			SWAPSSE1(4, 6);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			break;
		}

		case 14: // best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE1(8, 10);
			SWAPSSE1(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE1(9, 11);
			SWAPSSE1(0, 4);
			SWAPSSE1(8, 12);
			SWAPSSE1(1, 5);
			SWAPSSE1(9, 13);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(5, 10);
			SWAPSSE1(6, 9);
			SWAPSSE1(3, 12);
			SWAPSSE1(7, 11);
			SWAPSSE1(1, 2);
			SWAPSSE1(4, 8);
			SWAPSSE1(1, 4);
			SWAPSSE1(7, 13);
			SWAPSSE1(2, 8);
			SWAPSSE1(2, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 13);
			SWAPSSE1(3, 8);
			SWAPSSE1(7, 12);
			SWAPSSE1(6, 8);
			SWAPSSE1(10, 12);
			SWAPSSE1(3, 5);
			SWAPSSE1(7, 9);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			break;
		}

		case 15: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE1(8, 10);
			SWAPSSE1(12, 14);
			SWAPSSE1(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE1(9, 11);
			SWAPSSE1(0, 4);
			SWAPSSE1(8, 12);
			SWAPSSE1(1, 5);
			SWAPSSE1(9, 13);
			SWAPSSE1(2, 6);
			SWAPSSE1(10, 14);
			SWAPSSE1(3, 7);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(5, 10);
			SWAPSSE1(6, 9);
			SWAPSSE1(3, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(7, 11);
			SWAPSSE1(1, 2);
			SWAPSSE1(4, 8);
			SWAPSSE1(1, 4);
			SWAPSSE1(7, 13);
			SWAPSSE1(2, 8);
			SWAPSSE1(11, 14);
			SWAPSSE1(2, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 13);
			SWAPSSE1(3, 8);
			SWAPSSE1(7, 12);
			SWAPSSE1(6, 8);
			SWAPSSE1(10, 12);
			SWAPSSE1(3, 5);
			SWAPSSE1(7, 9);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			break;
		}

		case 16: // best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE1(8, 10);
			SWAPSSE1(12, 14);
			SWAPSSE1(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE1(9, 11);
			SWAPSSE1(13, 15);
			SWAPSSE1(0, 4);
			SWAPSSE1(8, 12);
			SWAPSSE1(1, 5);
			SWAPSSE1(9, 13);
			SWAPSSE1(2, 6);
			SWAPSSE1(10, 14);
			SWAPSSE1(3, 7);
			SWAPSSE1(11, 15);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(5, 10);
			SWAPSSE1(6, 9);
			SWAPSSE1(3, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(7, 11);
			SWAPSSE1(1, 2);
			SWAPSSE1(4, 8);
			SWAPSSE1(1, 4);
			SWAPSSE1(7, 13);
			SWAPSSE1(2, 8);
			SWAPSSE1(11, 14);
			SWAPSSE1(2, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 13);
			SWAPSSE1(3, 8);
			SWAPSSE1(7, 12);
			SWAPSSE1(6, 8);
			SWAPSSE1(10, 12);
			SWAPSSE1(3, 5);
			SWAPSSE1(7, 9);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			break;
		}

		case 17: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(2, 16);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(1, 16);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			break;
		}

		case 18: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(1, 16);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			break;
		}

		case 19: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);			
			break;
		}

		case 20: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			break;
		}

		case 21: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			break;
		}

		case 22: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			break;
		}

		case 23: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			break;
		}

		case 24: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			break;
		}

		case 25: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			break;
		}
		
		case 26: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(9, 25);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			break;
		}

		case 27: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE1(25, 26);			
			break;
		}

		case 28: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE1(11, 27);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE1(19, 27);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE1(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE1(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE1(26, 27);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE1(25, 26);
			break;
		}

		case 29: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE1(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE1(19, 27);
			SWAPSSE1(20, 28);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE1(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE1(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE1(14, 28);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE1(22, 28);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE1(26, 28);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE1(26, 27);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE1(13, 28);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE1(21, 28);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE1(25, 28);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE1(25, 26);
			SWAPSSE1(27, 28);
			break;
		}

		case 30: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE1(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE1(13, 29);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE1(19, 27);
			SWAPSSE1(20, 28);
			SWAPSSE1(21, 29);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE1(25, 29);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE1(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE1(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE1(14, 28);
			SWAPSSE1(15, 29);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE1(22, 28);
			SWAPSSE1(23, 29);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE1(26, 28);
			SWAPSSE1(27, 29);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE1(26, 27);
			SWAPSSE1(28, 29);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE1(13, 28);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE1(21, 28);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE1(25, 28);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE1(25, 26);
			SWAPSSE1(27, 28);
			break;
		}

		case 31: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE1(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE1(13, 29);
			SWAPSSE1(14, 30);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE1(19, 27);
			SWAPSSE1(20, 28);
			SWAPSSE1(21, 29);
			SWAPSSE1(22, 30);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE1(25, 29);
			SWAPSSE1(26, 30);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE1(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE1(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE1(28, 30);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE1(14, 28);
			SWAPSSE1(15, 29);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE1(22, 28);
			SWAPSSE1(23, 29);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE1(26, 28);
			SWAPSSE1(27, 29);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE1(26, 27);
			SWAPSSE1(28, 29);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE1(13, 28);
			SWAPSSE1(15, 30);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE1(21, 28);
			SWAPSSE1(23, 30);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE1(25, 28);
			SWAPSSE1(27, 30);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE1(25, 26);
			SWAPSSE1(27, 28);
			SWAPSSE1(29, 30);
			break;
		}

		case 32: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE1(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE1(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE1(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE1(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE1(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE1(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE1(13, 29);
			SWAPSSE1(14, 30);
			SWAPSSE1(15, 31);
			SWAPSSE1(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE1(19, 27);
			SWAPSSE1(20, 28);
			SWAPSSE1(21, 29);
			SWAPSSE1(22, 30);
			SWAPSSE1(23, 31);
			SWAPSSE1(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE1(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE1(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE1(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE1(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE1(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE1(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE1(25, 29);
			SWAPSSE1(26, 30);
			SWAPSSE1(27, 31);
			SWAPSSE1(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE1(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE1(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE1(28, 30);
			SWAPSSE1(29, 31);
			SWAPSSE1(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE1(14, 28);
			SWAPSSE1(15, 29);
			SWAPSSE1(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE1(22, 28);
			SWAPSSE1(23, 29);
			SWAPSSE1(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE1(26, 28);
			SWAPSSE1(27, 29);
			SWAPSSE1(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE1(26, 27);
			SWAPSSE1(28, 29);
			SWAPSSE1(30, 31);
			SWAPSSE1(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE1(13, 28);
			SWAPSSE1(15, 30);
			SWAPSSE1(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE1(21, 28);
			SWAPSSE1(23, 30);
			SWAPSSE1(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE1(25, 28);
			SWAPSSE1(27, 30);
			SWAPSSE1(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE1(25, 26);
			SWAPSSE1(27, 28);
			SWAPSSE1(29, 30);
			break;
		}

		/*default:
		{
			printf("sorting network call with invalid set(%d), exiting... \n", length);
			exit(1);
			break;
		}*/

	}
}

void fastestnetworkSSE2(float* first, float* last)
{
	int length = last - first;
    __m128 a, b, c, d, min1, max1, min2, max2;

	switch(length)
	{
        case 0:
        {
            break;
        }
		case 1:
		{
			break;
		}

		case 2: // Bose-Nelson -
		{
			SWAPSSE1(0, 1);
			break;
		}

		case 3: // Bose-Nelson
		{
			SWAPSSE1(1, 2);
			SWAPSSE2(0, 2);
			SWAPSSE1(0, 1);
			break;
		}

		case 4: // Bose-Nelson
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(1, 2);
			break;
		}

		case 5: // Bose-Nelson
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(3, 4);
			SWAPSSE1(2, 4);
			SWAPSSE2(2, 3);
			SWAPSSE1(0, 3);
			SWAPSSE2(0, 2);
			SWAPSSE1(1, 4);
			SWAPSSE2(1, 3);
			SWAPSSE1(1, 2);
			break;
		}

		case 6: // Bose-Nelson
		{
			SWAPSSE1(1, 2);
			SWAPSSE2(0, 2);
			SWAPSSE1(0, 1);
			SWAPSSE2(4, 5);
			SWAPSSE1(3, 5);
			SWAPSSE2(3, 4);
			SWAPSSE1(0, 3);
			SWAPSSE2(1, 4);
			SWAPSSE1(2, 5);
			SWAPSSE2(2, 4);
			SWAPSSE1(1, 3);
			SWAPSSE2(2, 3);
			break;
		}

		case 7: // Bose-Nelson
		{
			SWAPSSE1(1, 2);
			SWAPSSE2(0, 2);
			SWAPSSE1(0, 1);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(3, 5);
			SWAPSSE1(4, 6);
			SWAPSSE2(4, 5);
			SWAPSSE1(0, 4);
			SWAPSSE2(0, 3);
			SWAPSSE1(1, 5);
			SWAPSSE2(2, 6);
			SWAPSSE1(2, 5);
			SWAPSSE2(1, 3);
			SWAPSSE1(2, 4);
			SWAPSSE2(2, 3);
			break;
		}

		case 8: // Bose-Nelson
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(1, 2);
			SWAPSSE2(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE2(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE2(5, 6);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(1, 4);
			SWAPSSE2(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE2(3, 6);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(3, 4);
			break;
		}

		case 9: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(3, 4);
			SWAPSSE1(6, 7);
			SWAPSSE2(1, 2);
			SWAPSSE1(4, 5);
			SWAPSSE2(7, 8);
			SWAPSSE1(0, 1);
			SWAPSSE2(3, 4);
			SWAPSSE1(6, 7);
			SWAPSSE2(0, 3);
			SWAPSSE1(3, 6);
			SWAPSSE2(0, 3);
			SWAPSSE1(1, 4);
			SWAPSSE2(4, 7);
			SWAPSSE1(1, 4);
			SWAPSSE2(2, 5);
			SWAPSSE1(5, 8);
			SWAPSSE2(2, 5);
			SWAPSSE1(1, 3);
			SWAPSSE2(5, 7);
			SWAPSSE1(2, 6);
			SWAPSSE2(4, 6);
			SWAPSSE1(2, 4);
			SWAPSSE2(2, 3);
			SWAPSSE1(5, 6);
			break;
		}

		case 10: // Best known
		{
			SWAPSSE1(4, 9);
			SWAPSSE2(3, 8);
			SWAPSSE1(2, 7);
			SWAPSSE2(1, 6);
			SWAPSSE1(0, 5);
			SWAPSSE2(1, 4);
			SWAPSSE1(6, 9);
			SWAPSSE2(0, 3);
			SWAPSSE1(5, 8);
			SWAPSSE2(0, 2);
			SWAPSSE1(3, 6);
			SWAPSSE2(7, 9);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 4);
			SWAPSSE1(5, 7);
			SWAPSSE2(8, 9);
			SWAPSSE1(1, 2);
			SWAPSSE2(4, 6);
			SWAPSSE1(7, 8);
			SWAPSSE2(3, 5);
			SWAPSSE1(2, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(1, 3);
			SWAPSSE2(4, 7);
			SWAPSSE1(2, 3);
			SWAPSSE2(6, 7);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(4, 5);
			break;
		}

		case 11: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE2(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE2(8, 10);
			SWAPSSE1(1, 2);
			SWAPSSE2(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE2(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE2(5, 9);
			SWAPSSE1(2, 6);
			SWAPSSE2(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE2(0, 4);
			SWAPSSE1(3, 7);
			SWAPSSE2(4, 8);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 4);
			SWAPSSE1(7, 10);
			SWAPSSE2(3, 8);
			SWAPSSE1(2, 3);
			SWAPSSE2(8, 9);
			SWAPSSE1(2, 4);
			SWAPSSE2(7, 9);
			SWAPSSE1(3, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			break;
		}

		case 12: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(1, 3);
			SWAPSSE2(5, 7);
			SWAPSSE1(9, 11);
			SWAPSSE2(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE2(8, 10);
			SWAPSSE1(1, 2);
			SWAPSSE2(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE2(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE2(5, 9);
			SWAPSSE1(2, 6);
			SWAPSSE2(1, 5);
			SWAPSSE1(6, 10);
			SWAPSSE2(0, 4);
			SWAPSSE1(7, 11);
			SWAPSSE2(3, 7);
			SWAPSSE1(4, 8);
			SWAPSSE2(0, 4);
			SWAPSSE1(7, 11);
			SWAPSSE2(1, 4);
			SWAPSSE1(7, 10);
			SWAPSSE2(3, 8);
			SWAPSSE1(2, 3);
			SWAPSSE2(8, 9);
			SWAPSSE1(2, 4);
			SWAPSSE2(7, 9);
			SWAPSSE1(3, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			break;
		}

		case 13: // Best known
		{
			SWAPSSE1(1, 7);
			SWAPSSE2(9, 11);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 8);
			SWAPSSE1(0, 12);
			SWAPSSE2(2, 6);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(8, 11);
			SWAPSSE1(7, 12);
			SWAPSSE2(5, 9);
			SWAPSSE1(0, 2);
			SWAPSSE2(3, 7);
			SWAPSSE1(10, 11);
			SWAPSSE2(1, 4);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 8);
			SWAPSSE1(11, 12);
			SWAPSSE2(4, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE2(1, 7);
			SWAPSSE1(2, 6);
			SWAPSSE2(9, 11);
			SWAPSSE1(1, 3);
			SWAPSSE2(4, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(0, 5);
			SWAPSSE1(2, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(1, 2);
			SWAPSSE1(3, 5);
			SWAPSSE2(7, 8);
			SWAPSSE1(4, 6);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			break;
		}

		case 14: // best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE2(8, 10);
			SWAPSSE1(1, 3);
			SWAPSSE2(5, 7);
			SWAPSSE1(9, 11);
			SWAPSSE2(0, 4);
			SWAPSSE1(8, 12);
			SWAPSSE2(1, 5);
			SWAPSSE1(9, 13);
			SWAPSSE2(2, 6);
			SWAPSSE1(3, 7);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(5, 10);
			SWAPSSE1(6, 9);
			SWAPSSE2(3, 12);
			SWAPSSE1(7, 11);
			SWAPSSE2(1, 2);
			SWAPSSE1(4, 8);
			SWAPSSE2(1, 4);
			SWAPSSE1(7, 13);
			SWAPSSE2(2, 8);
			SWAPSSE1(2, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 13);
			SWAPSSE1(3, 8);
			SWAPSSE2(7, 12);
			SWAPSSE1(6, 8);
			SWAPSSE2(10, 12);
			SWAPSSE1(3, 5);
			SWAPSSE2(7, 9);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			break;
		}

		case 15: // Best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(0, 2);
			SWAPSSE1(4, 6);
			SWAPSSE2(8, 10);
			SWAPSSE1(12, 14);
			SWAPSSE2(1, 3);
			SWAPSSE1(5, 7);
			SWAPSSE2(9, 11);
			SWAPSSE1(0, 4);
			SWAPSSE2(8, 12);
			SWAPSSE1(1, 5);
			SWAPSSE2(9, 13);
			SWAPSSE1(2, 6);
			SWAPSSE2(10, 14);
			SWAPSSE1(3, 7);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(5, 10);
			SWAPSSE2(6, 9);
			SWAPSSE1(3, 12);
			SWAPSSE2(13, 14);
			SWAPSSE1(7, 11);
			SWAPSSE2(1, 2);
			SWAPSSE1(4, 8);
			SWAPSSE2(1, 4);
			SWAPSSE1(7, 13);
			SWAPSSE2(2, 8);
			SWAPSSE1(11, 14);
			SWAPSSE2(2, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 13);
			SWAPSSE2(3, 8);
			SWAPSSE1(7, 12);
			SWAPSSE2(6, 8);
			SWAPSSE1(10, 12);
			SWAPSSE2(3, 5);
			SWAPSSE1(7, 9);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(6, 7);
			SWAPSSE2(8, 9);
			break;
		}

		case 16: // best known
		{
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(0, 2);
			SWAPSSE2(4, 6);
			SWAPSSE1(8, 10);
			SWAPSSE2(12, 14);
			SWAPSSE1(1, 3);
			SWAPSSE2(5, 7);
			SWAPSSE1(9, 11);
			SWAPSSE2(13, 15);
			SWAPSSE1(0, 4);
			SWAPSSE2(8, 12);
			SWAPSSE1(1, 5);
			SWAPSSE2(9, 13);
			SWAPSSE1(2, 6);
			SWAPSSE2(10, 14);
			SWAPSSE1(3, 7);
			SWAPSSE2(11, 15);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(5, 10);
			SWAPSSE2(6, 9);
			SWAPSSE1(3, 12);
			SWAPSSE2(13, 14);
			SWAPSSE1(7, 11);
			SWAPSSE2(1, 2);
			SWAPSSE1(4, 8);
			SWAPSSE2(1, 4);
			SWAPSSE1(7, 13);
			SWAPSSE2(2, 8);
			SWAPSSE1(11, 14);
			SWAPSSE2(2, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 13);
			SWAPSSE2(3, 8);
			SWAPSSE1(7, 12);
			SWAPSSE2(6, 8);
			SWAPSSE1(10, 12);
			SWAPSSE2(3, 5);
			SWAPSSE1(7, 9);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(6, 7);
			SWAPSSE2(8, 9);
			break;
		}

		case 17: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(8, 16);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(2, 16);
			SWAPSSE2(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE2(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE2(10, 16);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE2(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE2(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE2(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE2(1, 16);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			break;
		}

		case 18: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(1, 16);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			break;
		}

		case 19: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE2(10, 18);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE2(14, 18);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE2(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE2(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE2(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE2(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE2(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE2(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE2(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE2(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE2(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE2(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE2(16, 17);
			SWAPSSE1(1, 16);
			SWAPSSE2(3, 18);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(1, 4);
			SWAPSSE2(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE2(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE2(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE2(15, 18);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);			
			break;
		}

		case 20: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE2(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(1, 16);
			SWAPSSE2(3, 18);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(1, 4);
			SWAPSSE2(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE2(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE2(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE2(15, 18);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			break;
		}

		case 21: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE2(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE2(12, 20);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE2(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE2(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE2(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE2(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE2(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE2(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE2(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE2(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE2(6, 20);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE2(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE2(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE2(18, 20);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(1, 16);
			SWAPSSE2(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE2(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE2(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE2(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE2(13, 20);
			SWAPSSE1(1, 4);
			SWAPSSE2(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE2(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE2(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE2(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE2(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE2(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE2(17, 18);
			SWAPSSE1(19, 20);
			break;
		}

		case 22: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE2(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE2(5, 20);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE2(17, 20);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE2(19, 20);
			break;
		}

		case 23: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(8, 16);
			SWAPSSE1(9, 17);
			SWAPSSE2(10, 18);
			SWAPSSE1(11, 19);
			SWAPSSE2(12, 20);
			SWAPSSE1(13, 21);
			SWAPSSE2(14, 22);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE2(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE2(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE2(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE2(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE2(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE2(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE2(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE2(20, 22);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE2(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE2(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE2(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE2(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE2(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE2(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE2(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE2(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE2(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE2(21, 22);
			break;
		}

		case 24: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE2(15, 19);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE2(21, 23);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(22, 23);
			SWAPSSE1(1, 16);
			SWAPSSE2(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE2(7, 22);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE2(15, 22);
			SWAPSSE1(1, 4);
			SWAPSSE2(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE2(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE2(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE2(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE2(19, 22);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE2(19, 20);
			SWAPSSE1(21, 22);
			break;
		}

		case 25: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(16, 24);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE2(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE2(20, 24);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE2(21, 23);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE2(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE2(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE2(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE2(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE2(18, 24);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE2(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE2(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE2(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE2(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE2(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE2(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE2(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE2(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE2(9, 24);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE2(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE2(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE2(21, 24);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE2(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE2(23, 24);
			break;
		}
		
		case 26: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(9, 25);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE2(17, 25);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE2(13, 25);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE2(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE2(21, 25);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE2(21, 23);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE2(11, 25);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE2(19, 25);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE2(23, 25);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE2(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE2(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE2(9, 24);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE2(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE2(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE2(21, 24);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE2(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE2(23, 24);
			break;
		}

		case 27: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE2(18, 26);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE2(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE2(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE2(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE2(22, 26);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE2(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE2(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE2(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE2(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE2(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE2(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE2(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE2(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE2(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE2(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE2(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE2(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE2(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE2(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE2(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE2(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE2(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE2(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE2(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE2(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE2(24, 25);
			SWAPSSE1(1, 16);
			SWAPSSE2(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE2(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE2(11, 26);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE2(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE2(19, 26);
			SWAPSSE1(1, 4);
			SWAPSSE2(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE2(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE2(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE2(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE2(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE2(23, 26);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE2(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE2(23, 24);
			SWAPSSE1(25, 26);			
			break;
		}

		case 28: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE2(11, 27);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE2(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE2(19, 27);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE2(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE2(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE2(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE2(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE2(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE2(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE2(25, 27);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE2(11, 25);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE2(19, 25);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE2(23, 25);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE2(26, 27);
			SWAPSSE1(1, 16);
			SWAPSSE2(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE2(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE2(11, 26);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE2(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE2(19, 26);
			SWAPSSE1(1, 4);
			SWAPSSE2(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE2(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE2(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE2(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE2(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE2(23, 26);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE2(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE2(23, 24);
			SWAPSSE1(25, 26);
			break;
		}

		case 29: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE2(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE2(18, 26);
			SWAPSSE1(19, 27);
			SWAPSSE2(20, 28);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE2(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE2(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE2(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE2(14, 26);
			SWAPSSE1(15, 27);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE2(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE2(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE2(22, 26);
			SWAPSSE1(23, 27);
			SWAPSSE2(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE2(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE2(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE2(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE2(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE2(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE2(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE2(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE2(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE2(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE2(14, 28);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE2(19, 25);
			SWAPSSE1(22, 28);
			SWAPSSE2(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE2(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE2(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE2(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE2(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE2(26, 28);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE2(26, 27);
			SWAPSSE1(1, 16);
			SWAPSSE2(3, 18);
			SWAPSSE1(5, 20);
			SWAPSSE2(7, 22);
			SWAPSSE1(9, 24);
			SWAPSSE2(11, 26);
			SWAPSSE1(13, 28);
			SWAPSSE2(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE2(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE2(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE2(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE2(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE2(21, 28);
			SWAPSSE1(1, 4);
			SWAPSSE2(3, 6);
			SWAPSSE1(5, 8);
			SWAPSSE2(7, 10);
			SWAPSSE1(9, 12);
			SWAPSSE2(11, 14);
			SWAPSSE1(13, 16);
			SWAPSSE2(15, 18);
			SWAPSSE1(17, 20);
			SWAPSSE2(19, 22);
			SWAPSSE1(21, 24);
			SWAPSSE2(23, 26);
			SWAPSSE1(25, 28);
			SWAPSSE2(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE2(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE2(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE2(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE2(25, 26);
			SWAPSSE1(27, 28);
			break;
		}

		case 30: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE2(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE2(13, 29);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE2(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE2(19, 27);
			SWAPSSE1(20, 28);
			SWAPSSE2(21, 29);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE2(25, 29);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE2(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE2(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE2(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE2(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE2(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE1(8, 10);
			SWAPSSE2(9, 11);
			SWAPSSE1(12, 14);
			SWAPSSE2(13, 15);
			SWAPSSE1(16, 18);
			SWAPSSE2(17, 19);
			SWAPSSE1(20, 22);
			SWAPSSE2(21, 23);
			SWAPSSE1(24, 26);
			SWAPSSE2(25, 27);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE2(11, 25);
			SWAPSSE1(14, 28);
			SWAPSSE2(15, 29);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE2(19, 25);
			SWAPSSE1(22, 28);
			SWAPSSE2(23, 29);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE2(23, 25);
			SWAPSSE1(26, 28);
			SWAPSSE2(27, 29);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE2(26, 27);
			SWAPSSE1(28, 29);
			SWAPSSE2(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE2(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE2(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE2(13, 28);
			SWAPSSE1(1, 8);
			SWAPSSE2(3, 10);
			SWAPSSE1(5, 12);
			SWAPSSE2(7, 14);
			SWAPSSE1(9, 16);
			SWAPSSE2(11, 18);
			SWAPSSE1(13, 20);
			SWAPSSE2(15, 22);
			SWAPSSE1(17, 24);
			SWAPSSE2(19, 26);
			SWAPSSE1(21, 28);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE2(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE2(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE2(25, 28);
			SWAPSSE1(1, 2);
			SWAPSSE2(3, 4);
			SWAPSSE1(5, 6);
			SWAPSSE2(7, 8);
			SWAPSSE1(9, 10);
			SWAPSSE2(11, 12);
			SWAPSSE1(13, 14);
			SWAPSSE2(15, 16);
			SWAPSSE1(17, 18);
			SWAPSSE2(19, 20);
			SWAPSSE1(21, 22);
			SWAPSSE2(23, 24);
			SWAPSSE1(25, 26);
			SWAPSSE2(27, 28);
			break;
		}

		case 31: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE2(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE2(13, 29);
			SWAPSSE1(14, 30);
			SWAPSSE2(0, 8);
			SWAPSSE1(1, 9);
			SWAPSSE2(2, 10);
			SWAPSSE1(3, 11);
			SWAPSSE2(4, 12);
			SWAPSSE1(5, 13);
			SWAPSSE2(6, 14);
			SWAPSSE1(7, 15);
			SWAPSSE2(16, 24);
			SWAPSSE1(17, 25);
			SWAPSSE2(18, 26);
			SWAPSSE1(19, 27);
			SWAPSSE2(20, 28);
			SWAPSSE1(21, 29);
			SWAPSSE2(22, 30);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE2(25, 29);
			SWAPSSE1(26, 30);
			SWAPSSE2(4, 16);
			SWAPSSE1(5, 17);
			SWAPSSE2(6, 18);
			SWAPSSE1(7, 19);
			SWAPSSE2(12, 24);
			SWAPSSE1(13, 25);
			SWAPSSE2(14, 26);
			SWAPSSE1(15, 27);
			SWAPSSE2(4, 8);
			SWAPSSE1(5, 9);
			SWAPSSE2(6, 10);
			SWAPSSE1(7, 11);
			SWAPSSE2(12, 16);
			SWAPSSE1(13, 17);
			SWAPSSE2(14, 18);
			SWAPSSE1(15, 19);
			SWAPSSE2(20, 24);
			SWAPSSE1(21, 25);
			SWAPSSE2(22, 26);
			SWAPSSE1(23, 27);
			SWAPSSE2(0, 2);
			SWAPSSE1(1, 3);
			SWAPSSE2(4, 6);
			SWAPSSE1(5, 7);
			SWAPSSE2(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE2(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE2(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE2(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE2(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE2(28, 30);
			SWAPSSE1(2, 16);
			SWAPSSE2(3, 17);
			SWAPSSE1(6, 20);
			SWAPSSE2(7, 21);
			SWAPSSE1(10, 24);
			SWAPSSE2(11, 25);
			SWAPSSE1(14, 28);
			SWAPSSE2(15, 29);
			SWAPSSE1(2, 8);
			SWAPSSE2(3, 9);
			SWAPSSE1(6, 12);
			SWAPSSE2(7, 13);
			SWAPSSE1(10, 16);
			SWAPSSE2(11, 17);
			SWAPSSE1(14, 20);
			SWAPSSE2(15, 21);
			SWAPSSE1(18, 24);
			SWAPSSE2(19, 25);
			SWAPSSE1(22, 28);
			SWAPSSE2(23, 29);
			SWAPSSE1(2, 4);
			SWAPSSE2(3, 5);
			SWAPSSE1(6, 8);
			SWAPSSE2(7, 9);
			SWAPSSE1(10, 12);
			SWAPSSE2(11, 13);
			SWAPSSE1(14, 16);
			SWAPSSE2(15, 17);
			SWAPSSE1(18, 20);
			SWAPSSE2(19, 21);
			SWAPSSE1(22, 24);
			SWAPSSE2(23, 25);
			SWAPSSE1(26, 28);
			SWAPSSE2(27, 29);
			SWAPSSE1(0, 1);
			SWAPSSE2(2, 3);
			SWAPSSE1(4, 5);
			SWAPSSE2(6, 7);
			SWAPSSE1(8, 9);
			SWAPSSE2(10, 11);
			SWAPSSE1(12, 13);
			SWAPSSE2(14, 15);
			SWAPSSE1(16, 17);
			SWAPSSE2(18, 19);
			SWAPSSE1(20, 21);
			SWAPSSE2(22, 23);
			SWAPSSE1(24, 25);
			SWAPSSE2(26, 27);
			SWAPSSE1(28, 29);
			SWAPSSE2(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE2(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE2(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE2(13, 28);
			SWAPSSE1(15, 30);
			SWAPSSE2(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE2(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE2(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE2(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE2(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE2(21, 28);
			SWAPSSE1(23, 30);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE2(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE2(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE2(25, 28);
			SWAPSSE1(27, 30);
			SWAPSSE2(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE2(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE2(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE2(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE2(25, 26);
			SWAPSSE1(27, 28);
			SWAPSSE2(29, 30);
			break;
		}

		case 32: // Batcher's Merge-Exchange
		{
			SWAPSSE1(0, 16);
			SWAPSSE2(1, 17);
			SWAPSSE1(2, 18);
			SWAPSSE2(3, 19);
			SWAPSSE1(4, 20);
			SWAPSSE2(5, 21);
			SWAPSSE1(6, 22);
			SWAPSSE2(7, 23);
			SWAPSSE1(8, 24);
			SWAPSSE2(9, 25);
			SWAPSSE1(10, 26);
			SWAPSSE2(11, 27);
			SWAPSSE1(12, 28);
			SWAPSSE2(13, 29);
			SWAPSSE1(14, 30);
			SWAPSSE2(15, 31);
			SWAPSSE1(0, 8);
			SWAPSSE2(1, 9);
			SWAPSSE1(2, 10);
			SWAPSSE2(3, 11);
			SWAPSSE1(4, 12);
			SWAPSSE2(5, 13);
			SWAPSSE1(6, 14);
			SWAPSSE2(7, 15);
			SWAPSSE1(16, 24);
			SWAPSSE2(17, 25);
			SWAPSSE1(18, 26);
			SWAPSSE2(19, 27);
			SWAPSSE1(20, 28);
			SWAPSSE2(21, 29);
			SWAPSSE1(22, 30);
			SWAPSSE2(23, 31);
			SWAPSSE1(8, 16);
			SWAPSSE2(9, 17);
			SWAPSSE1(10, 18);
			SWAPSSE2(11, 19);
			SWAPSSE1(12, 20);
			SWAPSSE2(13, 21);
			SWAPSSE1(14, 22);
			SWAPSSE2(15, 23);
			SWAPSSE1(0, 4);
			SWAPSSE2(1, 5);
			SWAPSSE1(2, 6);
			SWAPSSE2(3, 7);
			SWAPSSE1(8, 12);
			SWAPSSE2(9, 13);
			SWAPSSE1(10, 14);
			SWAPSSE2(11, 15);
			SWAPSSE1(16, 20);
			SWAPSSE2(17, 21);
			SWAPSSE1(18, 22);
			SWAPSSE2(19, 23);
			SWAPSSE1(24, 28);
			SWAPSSE2(25, 29);
			SWAPSSE1(26, 30);
			SWAPSSE2(27, 31);
			SWAPSSE1(4, 16);
			SWAPSSE2(5, 17);
			SWAPSSE1(6, 18);
			SWAPSSE2(7, 19);
			SWAPSSE1(12, 24);
			SWAPSSE2(13, 25);
			SWAPSSE1(14, 26);
			SWAPSSE2(15, 27);
			SWAPSSE1(4, 8);
			SWAPSSE2(5, 9);
			SWAPSSE1(6, 10);
			SWAPSSE2(7, 11);
			SWAPSSE1(12, 16);
			SWAPSSE2(13, 17);
			SWAPSSE1(14, 18);
			SWAPSSE2(15, 19);
			SWAPSSE1(20, 24);
			SWAPSSE2(21, 25);
			SWAPSSE1(22, 26);
			SWAPSSE2(23, 27);
			SWAPSSE1(0, 2);
			SWAPSSE2(1, 3);
			SWAPSSE1(4, 6);
			SWAPSSE2(5, 7);
			SWAPSSE2(8, 10);
			SWAPSSE1(9, 11);
			SWAPSSE2(12, 14);
			SWAPSSE1(13, 15);
			SWAPSSE2(16, 18);
			SWAPSSE1(17, 19);
			SWAPSSE2(20, 22);
			SWAPSSE1(21, 23);
			SWAPSSE2(24, 26);
			SWAPSSE1(25, 27);
			SWAPSSE2(28, 30);
			SWAPSSE1(29, 31);
			SWAPSSE2(2, 16);
			SWAPSSE1(3, 17);
			SWAPSSE2(6, 20);
			SWAPSSE1(7, 21);
			SWAPSSE2(10, 24);
			SWAPSSE1(11, 25);
			SWAPSSE2(14, 28);
			SWAPSSE1(15, 29);
			SWAPSSE2(2, 8);
			SWAPSSE1(3, 9);
			SWAPSSE2(6, 12);
			SWAPSSE1(7, 13);
			SWAPSSE2(10, 16);
			SWAPSSE1(11, 17);
			SWAPSSE2(14, 20);
			SWAPSSE1(15, 21);
			SWAPSSE2(18, 24);
			SWAPSSE1(19, 25);
			SWAPSSE2(22, 28);
			SWAPSSE1(23, 29);
			SWAPSSE2(2, 4);
			SWAPSSE1(3, 5);
			SWAPSSE2(6, 8);
			SWAPSSE1(7, 9);
			SWAPSSE2(10, 12);
			SWAPSSE1(11, 13);
			SWAPSSE2(14, 16);
			SWAPSSE1(15, 17);
			SWAPSSE2(18, 20);
			SWAPSSE1(19, 21);
			SWAPSSE2(22, 24);
			SWAPSSE1(23, 25);
			SWAPSSE2(26, 28);
			SWAPSSE1(27, 29);
			SWAPSSE2(0, 1);
			SWAPSSE1(2, 3);
			SWAPSSE2(4, 5);
			SWAPSSE1(6, 7);
			SWAPSSE2(8, 9);
			SWAPSSE1(10, 11);
			SWAPSSE2(12, 13);
			SWAPSSE1(14, 15);
			SWAPSSE2(16, 17);
			SWAPSSE1(18, 19);
			SWAPSSE2(20, 21);
			SWAPSSE1(22, 23);
			SWAPSSE2(24, 25);
			SWAPSSE1(26, 27);
			SWAPSSE2(28, 29);
			SWAPSSE1(30, 31);
			SWAPSSE2(1, 16);
			SWAPSSE1(3, 18);
			SWAPSSE2(5, 20);
			SWAPSSE1(7, 22);
			SWAPSSE2(9, 24);
			SWAPSSE1(11, 26);
			SWAPSSE2(13, 28);
			SWAPSSE1(15, 30);
			SWAPSSE2(1, 8);
			SWAPSSE1(3, 10);
			SWAPSSE2(5, 12);
			SWAPSSE1(7, 14);
			SWAPSSE2(9, 16);
			SWAPSSE1(11, 18);
			SWAPSSE2(13, 20);
			SWAPSSE1(15, 22);
			SWAPSSE2(17, 24);
			SWAPSSE1(19, 26);
			SWAPSSE2(21, 28);
			SWAPSSE1(23, 30);
			SWAPSSE2(1, 4);
			SWAPSSE1(3, 6);
			SWAPSSE2(5, 8);
			SWAPSSE1(7, 10);
			SWAPSSE2(9, 12);
			SWAPSSE1(11, 14);
			SWAPSSE2(13, 16);
			SWAPSSE1(15, 18);
			SWAPSSE2(17, 20);
			SWAPSSE1(19, 22);
			SWAPSSE2(21, 24);
			SWAPSSE1(23, 26);
			SWAPSSE2(25, 28);
			SWAPSSE1(27, 30);
			SWAPSSE2(1, 2);
			SWAPSSE1(3, 4);
			SWAPSSE2(5, 6);
			SWAPSSE1(7, 8);
			SWAPSSE2(9, 10);
			SWAPSSE1(11, 12);
			SWAPSSE2(13, 14);
			SWAPSSE1(15, 16);
			SWAPSSE2(17, 18);
			SWAPSSE1(19, 20);
			SWAPSSE2(21, 22);
			SWAPSSE1(23, 24);
			SWAPSSE2(25, 26);
			SWAPSSE1(27, 28);
			SWAPSSE2(29, 30);
			break;
		}

		/*default:
		{
			printf("sorting network call with invalid set(%d), exiting... \n", length);
			exit(1);
			break;
		}*/

	}
}

